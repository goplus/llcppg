===== lauxlib.go =====
package lua

import (
	"github.com/goplus/llgo/c"
	"unsafe"
)

type Buffer struct {
	B    *int8
	Size uintptr
	N    uintptr
	L    *State
	Init struct {
		B [1024]int8
	}
}

type Reg struct {
	Name *int8
	Func unsafe.Pointer
}
//go:linkname Checkversion C.luaL_checkversion_
func Checkversion(*State, Number, uintptr)
//go:linkname Getmetafield C.luaL_getmetafield
func Getmetafield(*State, c.Int, *int8) c.Int
//go:linkname Callmeta C.luaL_callmeta
func Callmeta(*State, c.Int, *int8) c.Int
//go:linkname Tolstring__1 C.luaL_tolstring
func Tolstring__1(*State, c.Int, *uintptr) *int8
//go:linkname Argerror C.luaL_argerror
func Argerror(*State, c.Int, *int8) c.Int
//go:linkname Typeerror C.luaL_typeerror
func Typeerror(*State, c.Int, *int8) c.Int
//go:linkname Checklstring C.luaL_checklstring
func Checklstring(*State, c.Int, *uintptr) *int8
//go:linkname Optlstring C.luaL_optlstring
func Optlstring(*State, c.Int, *int8, *uintptr) *int8
//go:linkname Checknumber C.luaL_checknumber
func Checknumber(*State, c.Int) Number
//go:linkname Optnumber C.luaL_optnumber
func Optnumber(*State, c.Int, Number) Number
//go:linkname Checkinteger C.luaL_checkinteger
func Checkinteger(*State, c.Int) Integer
//go:linkname Optinteger C.luaL_optinteger
func Optinteger(*State, c.Int, Integer) Integer
//go:linkname Checkstack__1 C.luaL_checkstack
func Checkstack__1(*State, c.Int, *int8)
//go:linkname Checktype C.luaL_checktype
func Checktype(*State, c.Int, c.Int)
//go:linkname Checkany C.luaL_checkany
func Checkany(*State, c.Int)
//go:linkname Newmetatable C.luaL_newmetatable
func Newmetatable(*State, *int8) c.Int
//go:linkname Setmetatable__1 C.luaL_setmetatable
func Setmetatable__1(*State, *int8)
//go:linkname Testudata C.luaL_testudata
func Testudata(*State, c.Int, *int8) unsafe.Pointer
//go:linkname Checkudata C.luaL_checkudata
func Checkudata(*State, c.Int, *int8) unsafe.Pointer
//go:linkname Where C.luaL_where
func Where(*State, c.Int)
//go:linkname Error__1 C.luaL_error
func Error__1(__llgo_arg_0 *State, __llgo_arg_1 *int8, __llgo_va_list ...interface{}) c.Int
//go:linkname Checkoption C.luaL_checkoption
func Checkoption(*State, c.Int, *int8, **int8) c.Int
//go:linkname Fileresult C.luaL_fileresult
func Fileresult(*State, c.Int, *int8) c.Int
//go:linkname Execresult C.luaL_execresult
func Execresult(*State, c.Int) c.Int
//go:linkname Ref C.luaL_ref
func Ref(*State, c.Int) c.Int
//go:linkname Unref C.luaL_unref
func Unref(*State, c.Int, c.Int)
//go:linkname Loadfilex C.luaL_loadfilex
func Loadfilex(*State, *int8, *int8) c.Int
//go:linkname Loadbufferx C.luaL_loadbufferx
func Loadbufferx(*State, *int8, uintptr, *int8, *int8) c.Int
//go:linkname Loadstring C.luaL_loadstring
func Loadstring(*State, *int8) c.Int
//go:linkname Newstate__1 C.luaL_newstate
func Newstate__1() *State
//go:linkname Len__1 C.luaL_len
func Len__1(*State, c.Int) Integer
//go:linkname Addgsub C.luaL_addgsub
func Addgsub(*Buffer, *int8, *int8, *int8)
//go:linkname Gsub C.luaL_gsub
func Gsub(*State, *int8, *int8, *int8) *int8
//go:linkname Setfuncs C.luaL_setfuncs
func Setfuncs(*State, *Reg, c.Int)
//go:linkname Getsubtable C.luaL_getsubtable
func Getsubtable(*State, c.Int, *int8) c.Int
//go:linkname Traceback C.luaL_traceback
func Traceback(*State, *State, *int8, c.Int)
//go:linkname Requiref C.luaL_requiref
func Requiref(*State, *int8, CFunction, c.Int)
//go:linkname Buffinit C.luaL_buffinit
func Buffinit(*State, *Buffer)
//go:linkname Prepbuffsize C.luaL_prepbuffsize
func Prepbuffsize(*Buffer, uintptr) *int8
//go:linkname Addlstring C.luaL_addlstring
func Addlstring(*Buffer, *int8, uintptr)
//go:linkname Addstring C.luaL_addstring
func Addstring(*Buffer, *int8)
//go:linkname Addvalue C.luaL_addvalue
func Addvalue(*Buffer)
//go:linkname Pushresult C.luaL_pushresult
func Pushresult(*Buffer)
//go:linkname Pushresultsize C.luaL_pushresultsize
func Pushresultsize(*Buffer, uintptr)
//go:linkname Buffinitsize C.luaL_buffinitsize
func Buffinitsize(*State, *Buffer, uintptr) *int8

type Stream struct {
	F      *c.FILE
	Closef unsafe.Pointer
}

===== lua.go =====
package lua

import (
	"github.com/goplus/llgo/c"
	"unsafe"
)

type State struct {
	Unused [8]uint8
}
type Number float64
type Integer c.LongLong
type Unsigned c.UlongLong
type KContext uintptr
// llgo:type C
type CFunction func(*State) c.Int
// llgo:type C
type KFunction func(*State, c.Int, KContext) c.Int
// llgo:type C
type Reader func(*State, unsafe.Pointer, *uintptr) *int8
// llgo:type C
type Writer func(*State, unsafe.Pointer, uintptr, unsafe.Pointer) c.Int
// llgo:type C
type Alloc func(unsafe.Pointer, unsafe.Pointer, uintptr, uintptr) unsafe.Pointer
// llgo:type C
type WarnFunction func(unsafe.Pointer, *int8, c.Int)

type Debug struct {
	Event           c.Int
	Name            *int8
	Namewhat        *int8
	What            *int8
	Source          *int8
	Srclen          uintptr
	Currentline     c.Int
	Linedefined     c.Int
	Lastlinedefined c.Int
	Nups            int8
	Nparams         int8
	Isvararg        int8
	Istailcall      int8
	Ftransfer       uint16
	Ntransfer       uint16
	ShortSrc        [60]int8
	ICi             *CallInfo
}
// llgo:type C
type Hook func(*State, *Debug)
//go:linkname Newstate C.lua_newstate
func Newstate(Alloc, unsafe.Pointer) *State
//go:linkname Close C.lua_close
func Close(*State)
//go:linkname Newthread C.lua_newthread
func Newthread(*State) *State
//go:linkname Closethread C.lua_closethread
func Closethread(*State, *State) c.Int
//go:linkname Resetthread C.lua_resetthread
func Resetthread(*State) c.Int
//go:linkname Atpanic C.lua_atpanic
func Atpanic(*State, CFunction) CFunction
//go:linkname Version C.lua_version
func Version(*State) Number
//go:linkname Absindex C.lua_absindex
func Absindex(*State, c.Int) c.Int
//go:linkname Gettop C.lua_gettop
func Gettop(*State) c.Int
//go:linkname Settop C.lua_settop
func Settop(*State, c.Int)
//go:linkname Pushvalue C.lua_pushvalue
func Pushvalue(*State, c.Int)
//go:linkname Rotate C.lua_rotate
func Rotate(*State, c.Int, c.Int)
//go:linkname Copy C.lua_copy
func Copy(*State, c.Int, c.Int)
//go:linkname Checkstack C.lua_checkstack
func Checkstack(*State, c.Int) c.Int
//go:linkname Xmove C.lua_xmove
func Xmove(*State, *State, c.Int)
//go:linkname Isnumber C.lua_isnumber
func Isnumber(*State, c.Int) c.Int
//go:linkname Isstring C.lua_isstring
func Isstring(*State, c.Int) c.Int
//go:linkname Iscfunction C.lua_iscfunction
func Iscfunction(*State, c.Int) c.Int
//go:linkname Isinteger C.lua_isinteger
func Isinteger(*State, c.Int) c.Int
//go:linkname Isuserdata C.lua_isuserdata
func Isuserdata(*State, c.Int) c.Int
//go:linkname Type C.lua_type
func Type(*State, c.Int) c.Int
//go:linkname Typename C.lua_typename
func Typename(*State, c.Int) *int8
//go:linkname Tonumberx C.lua_tonumberx
func Tonumberx(*State, c.Int, *c.Int) Number
//go:linkname Tointegerx C.lua_tointegerx
func Tointegerx(*State, c.Int, *c.Int) Integer
//go:linkname Toboolean C.lua_toboolean
func Toboolean(*State, c.Int) c.Int
//go:linkname Tolstring C.lua_tolstring
func Tolstring(*State, c.Int, *uintptr) *int8
//go:linkname Rawlen C.lua_rawlen
func Rawlen(*State, c.Int) Unsigned
//go:linkname Tocfunction C.lua_tocfunction
func Tocfunction(*State, c.Int) CFunction
//go:linkname Touserdata C.lua_touserdata
func Touserdata(*State, c.Int) unsafe.Pointer
//go:linkname Tothread C.lua_tothread
func Tothread(*State, c.Int) *State
//go:linkname Topointer C.lua_topointer
func Topointer(*State, c.Int) unsafe.Pointer
//go:linkname Arith C.lua_arith
func Arith(*State, c.Int)
//go:linkname Rawequal C.lua_rawequal
func Rawequal(*State, c.Int, c.Int) c.Int
//go:linkname Compare C.lua_compare
func Compare(*State, c.Int, c.Int, c.Int) c.Int
//go:linkname Pushnil C.lua_pushnil
func Pushnil(*State)
//go:linkname Pushnumber C.lua_pushnumber
func Pushnumber(*State, Number)
//go:linkname Pushinteger C.lua_pushinteger
func Pushinteger(*State, Integer)
//go:linkname Pushlstring C.lua_pushlstring
func Pushlstring(*State, *int8, uintptr) *int8
//go:linkname Pushstring C.lua_pushstring
func Pushstring(*State, *int8) *int8
//go:linkname Pushfstring C.lua_pushfstring
func Pushfstring(__llgo_arg_0 *State, __llgo_arg_1 *int8, __llgo_va_list ...interface{}) *int8
//go:linkname Pushcclosure C.lua_pushcclosure
func Pushcclosure(*State, CFunction, c.Int)
//go:linkname Pushboolean C.lua_pushboolean
func Pushboolean(*State, c.Int)
//go:linkname Pushlightuserdata C.lua_pushlightuserdata
func Pushlightuserdata(*State, unsafe.Pointer)
//go:linkname Pushthread C.lua_pushthread
func Pushthread(*State) c.Int
//go:linkname Getglobal C.lua_getglobal
func Getglobal(*State, *int8) c.Int
//go:linkname Gettable C.lua_gettable
func Gettable(*State, c.Int) c.Int
//go:linkname Getfield C.lua_getfield
func Getfield(*State, c.Int, *int8) c.Int
//go:linkname Geti C.lua_geti
func Geti(*State, c.Int, Integer) c.Int
//go:linkname Rawget C.lua_rawget
func Rawget(*State, c.Int) c.Int
//go:linkname Rawgeti C.lua_rawgeti
func Rawgeti(*State, c.Int, Integer) c.Int
//go:linkname Rawgetp C.lua_rawgetp
func Rawgetp(*State, c.Int, unsafe.Pointer) c.Int
//go:linkname Createtable C.lua_createtable
func Createtable(*State, c.Int, c.Int)
//go:linkname Newuserdatauv C.lua_newuserdatauv
func Newuserdatauv(*State, uintptr, c.Int) unsafe.Pointer
//go:linkname Getmetatable C.lua_getmetatable
func Getmetatable(*State, c.Int) c.Int
//go:linkname Getiuservalue C.lua_getiuservalue
func Getiuservalue(*State, c.Int, c.Int) c.Int
//go:linkname Setglobal C.lua_setglobal
func Setglobal(*State, *int8)
//go:linkname Settable C.lua_settable
func Settable(*State, c.Int)
//go:linkname Setfield C.lua_setfield
func Setfield(*State, c.Int, *int8)
//go:linkname Seti C.lua_seti
func Seti(*State, c.Int, Integer)
//go:linkname Rawset C.lua_rawset
func Rawset(*State, c.Int)
//go:linkname Rawseti C.lua_rawseti
func Rawseti(*State, c.Int, Integer)
//go:linkname Rawsetp C.lua_rawsetp
func Rawsetp(*State, c.Int, unsafe.Pointer)
//go:linkname Setmetatable C.lua_setmetatable
func Setmetatable(*State, c.Int) c.Int
//go:linkname Setiuservalue C.lua_setiuservalue
func Setiuservalue(*State, c.Int, c.Int) c.Int
//go:linkname Callk C.lua_callk
func Callk(*State, c.Int, c.Int, KContext, KFunction)
//go:linkname Pcallk C.lua_pcallk
func Pcallk(*State, c.Int, c.Int, c.Int, KContext, KFunction) c.Int
//go:linkname Load C.lua_load
func Load(*State, Reader, unsafe.Pointer, *int8, *int8) c.Int
//go:linkname Dump C.lua_dump
func Dump(*State, Writer, unsafe.Pointer, c.Int) c.Int
//go:linkname Yieldk C.lua_yieldk
func Yieldk(*State, c.Int, KContext, KFunction) c.Int
//go:linkname Resume C.lua_resume
func Resume(*State, *State, c.Int, *c.Int) c.Int
//go:linkname Status C.lua_status
func Status(*State) c.Int
//go:linkname Isyieldable C.lua_isyieldable
func Isyieldable(*State) c.Int
//go:linkname Setwarnf C.lua_setwarnf
func Setwarnf(*State, WarnFunction, unsafe.Pointer)
//go:linkname Warning C.lua_warning
func Warning(*State, *int8, c.Int)
//go:linkname Gc C.lua_gc
func Gc(__llgo_arg_0 *State, __llgo_arg_1 c.Int, __llgo_va_list ...interface{}) c.Int
//go:linkname Error C.lua_error
func Error(*State) c.Int
//go:linkname Next C.lua_next
func Next(*State, c.Int) c.Int
//go:linkname Concat C.lua_concat
func Concat(*State, c.Int)
//go:linkname Len C.lua_len
func Len(*State, c.Int)
//go:linkname Stringtonumber C.lua_stringtonumber
func Stringtonumber(*State, *int8) uintptr
//go:linkname Getallocf C.lua_getallocf
func Getallocf(*State, *unsafe.Pointer) Alloc
//go:linkname Setallocf C.lua_setallocf
func Setallocf(*State, Alloc, unsafe.Pointer)
//go:linkname Toclose C.lua_toclose
func Toclose(*State, c.Int)
//go:linkname Closeslot C.lua_closeslot
func Closeslot(*State, c.Int)
//go:linkname Getstack C.lua_getstack
func Getstack(*State, c.Int, *Debug) c.Int
//go:linkname Getinfo C.lua_getinfo
func Getinfo(*State, *int8, *Debug) c.Int
//go:linkname Getlocal C.lua_getlocal
func Getlocal(*State, *Debug, c.Int) *int8
//go:linkname Setlocal C.lua_setlocal
func Setlocal(*State, *Debug, c.Int) *int8
//go:linkname Getupvalue C.lua_getupvalue
func Getupvalue(*State, c.Int, c.Int) *int8
//go:linkname Setupvalue C.lua_setupvalue
func Setupvalue(*State, c.Int, c.Int) *int8
//go:linkname Upvalueid C.lua_upvalueid
func Upvalueid(*State, c.Int, c.Int) unsafe.Pointer
//go:linkname Upvaluejoin C.lua_upvaluejoin
func Upvaluejoin(*State, c.Int, c.Int, c.Int, c.Int)
//go:linkname Sethook C.lua_sethook
func Sethook(*State, Hook, c.Int, c.Int)
//go:linkname Gethook C.lua_gethook
func Gethook(*State) Hook
//go:linkname Gethookmask C.lua_gethookmask
func Gethookmask(*State) c.Int
//go:linkname Gethookcount C.lua_gethookcount
func Gethookcount(*State) c.Int
//go:linkname Setcstacklimit C.lua_setcstacklimit
func Setcstacklimit(*State, c.Uint) c.Int

type CallInfo struct {
	Unused [8]uint8
}

===== lua_autogen_link.go =====
package lua

const LLGoPackage string = "link: $(pkg-config --libs lua);"

===== luaconf.go =====
package lua

import _ "unsafe"

===== lualib.go =====
package lua

import (
	"github.com/goplus/llgo/c"
	_ "unsafe"
)
//go:linkname Base C.luaopen_base
func Base(*State) c.Int
//go:linkname Coroutine C.luaopen_coroutine
func Coroutine(*State) c.Int
//go:linkname Table C.luaopen_table
func Table(*State) c.Int
//go:linkname Io C.luaopen_io
func Io(*State) c.Int
//go:linkname Os C.luaopen_os
func Os(*State) c.Int
//go:linkname String C.luaopen_string
func String(*State) c.Int
//go:linkname Utf8 C.luaopen_utf8
func Utf8(*State) c.Int
//go:linkname Math C.luaopen_math
func Math(*State) c.Int
//go:linkname Package C.luaopen_package
func Package(*State) c.Int
//go:linkname Openlibs C.luaL_openlibs
func Openlibs(*State)

===== llcppg.pub =====
luaL_Buffer Buffer
luaL_Reg Reg
luaL_Stream Stream
lua_Alloc Alloc
lua_CFunction CFunction
lua_Debug Debug
lua_Hook Hook
lua_Integer Integer
lua_KContext KContext
lua_KFunction KFunction
lua_Number Number
lua_Reader Reader
lua_State State
lua_Unsigned Unsigned
lua_WarnFunction WarnFunction
lua_Writer Writer