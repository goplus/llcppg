===== temp.go =====
package funcrefer

import (
	"github.com/goplus/llgo/c"
	"unsafe"
)
// llgo:type C
type CallBack func(unsafe.Pointer) c.Int
//go:linkname Exec C.exec
func Exec(unsafe.Pointer, CallBack)
//go:linkname Mprintf C.mprintf
func Mprintf(__llgo_arg_0 *int8, __llgo_va_list ...interface{}) *int8

type Hooks struct {
	MallocFn unsafe.Pointer
	FreeFn   unsafe.Pointer
}

type Stream struct {
	F  *c.FILE
	Cb unsafe.Pointer
}
// llgo:type C
type OSSLProviderInitFn func(__llgo_va_list ...interface{})
//go:linkname ProviderInit2 C.OSSL_provider_init2
func ProviderInit2(__llgo_va_list ...interface{})

type OSSLCOREHANDLE struct {
	Unused [8]uint8
}

type OSSLDISPATCH struct {
	Unused [8]uint8
}
// llgo:type C
type OSSLProviderInitFn2 func(*OSSLCOREHANDLE, *OSSLDISPATCH, **OSSLDISPATCH, *unsafe.Pointer) c.Int
//go:linkname ProviderInit C.OSSL_provider_init
func ProviderInit(*OSSLCOREHANDLE, *OSSLDISPATCH, **OSSLDISPATCH, *unsafe.Pointer) c.Int

type OsslLibCtxSt struct {
	Unused [8]uint8
}
type OSSLLIBCTX OsslLibCtxSt
//go:linkname ProviderAddBuiltin C.OSSL_PROVIDER_add_builtin
func ProviderAddBuiltin(*OSSLLIBCTX, *int8, OSSLProviderInitFn2) c.Int

===== llcppg.pub =====
CallBack
Hooks
OSSL_CORE_HANDLE OSSLCOREHANDLE
OSSL_DISPATCH OSSLDISPATCH
OSSL_LIB_CTX OSSLLIBCTX
OSSL_provider_init_fn OSSLProviderInitFn
OSSL_provider_init_fn2 OSSLProviderInitFn2
Stream
ossl_lib_ctx_st OsslLibCtxSt