===== cJSON.go =====
package cjson

import (
	"github.com/goplus/llgo/c"
	"unsafe"
)

const VERSIONMAJOR c.Int = 1
const VERSIONMINOR c.Int = 7
const VERSIONPATCH c.Int = 18
const IsReference c.Int = 256
const StringIsConst c.Int = 512
const NESTINGLIMIT c.Int = 1000

type JSON struct {
	Next        *JSON
	Prev        *JSON
	Child       *JSON
	Type        c.Int
	Valuestring *int8
	Valueint    c.Int
	Valuedouble float64
	String      *int8
}
type Hooks struct {
	MallocFn unsafe.Pointer
	FreeFn   unsafe.Pointer
}
type CustomBool c.Int
//go:linkname Version C.cJSON_Version
func Version() *int8
// llgo:link (*Hooks).InitHooks C.cJSON_InitHooks
func (recv_ *Hooks) InitHooks() {
}
//go:linkname Parse C.cJSON_Parse
func Parse(value *int8) *JSON
//go:linkname ParseWithLength C.cJSON_ParseWithLength
func ParseWithLength(value *int8, buffer_length uintptr) *JSON
//go:linkname ParseWithOpts C.cJSON_ParseWithOpts
func ParseWithOpts(value *int8, return_parse_end **int8, require_null_terminated CustomBool) *JSON
//go:linkname ParseWithLengthOpts C.cJSON_ParseWithLengthOpts
func ParseWithLengthOpts(value *int8, buffer_length uintptr, return_parse_end **int8, require_null_terminated CustomBool) *JSON
// llgo:link (*JSON).Print C.cJSON_Print
func (recv_ *JSON) Print() *int8 {
	return nil
}
// llgo:link (*JSON).PrintUnformatted C.cJSON_PrintUnformatted
func (recv_ *JSON) PrintUnformatted() *int8 {
	return nil
}
// llgo:link (*JSON).PrintBuffered C.cJSON_PrintBuffered
func (recv_ *JSON) PrintBuffered(prebuffer c.Int, fmt CustomBool) *int8 {
	return nil
}
// llgo:link (*JSON).PrintPreallocated C.cJSON_PrintPreallocated
func (recv_ *JSON) PrintPreallocated(buffer *int8, length c.Int, format CustomBool) CustomBool {
	return 0
}
// llgo:link (*JSON).Delete C.cJSON_Delete
func (recv_ *JSON) Delete() {
}
// llgo:link (*JSON).GetArraySize C.cJSON_GetArraySize
func (recv_ *JSON) GetArraySize() c.Int {
	return 0
}
// llgo:link (*JSON).GetArrayItem C.cJSON_GetArrayItem
func (recv_ *JSON) GetArrayItem(index c.Int) *JSON {
	return nil
}
// llgo:link (*JSON).GetObjectItem C.cJSON_GetObjectItem
func (recv_ *JSON) GetObjectItem(string *int8) *JSON {
	return nil
}
// llgo:link (*JSON).GetObjectItemCaseSensitive C.cJSON_GetObjectItemCaseSensitive
func (recv_ *JSON) GetObjectItemCaseSensitive(string *int8) *JSON {
	return nil
}
// llgo:link (*JSON).HasObjectItem C.cJSON_HasObjectItem
func (recv_ *JSON) HasObjectItem(string *int8) CustomBool {
	return 0
}
//go:linkname GetErrorPtr C.cJSON_GetErrorPtr
func GetErrorPtr() *int8
// llgo:link (*JSON).GetStringValue C.cJSON_GetStringValue
func (recv_ *JSON) GetStringValue() *int8 {
	return nil
}
// llgo:link (*JSON).GetNumberValue C.cJSON_GetNumberValue
func (recv_ *JSON) GetNumberValue() float64 {
	return 0
}
// llgo:link (*JSON).IsInvalid C.cJSON_IsInvalid
func (recv_ *JSON) IsInvalid() CustomBool {
	return 0
}
// llgo:link (*JSON).IsFalse C.cJSON_IsFalse
func (recv_ *JSON) IsFalse() CustomBool {
	return 0
}
// llgo:link (*JSON).IsTrue C.cJSON_IsTrue
func (recv_ *JSON) IsTrue() CustomBool {
	return 0
}
// llgo:link (*JSON).IsBool C.cJSON_IsBool
func (recv_ *JSON) IsBool() CustomBool {
	return 0
}
// llgo:link (*JSON).IsNull C.cJSON_IsNull
func (recv_ *JSON) IsNull() CustomBool {
	return 0
}
// llgo:link (*JSON).IsNumber C.cJSON_IsNumber
func (recv_ *JSON) IsNumber() CustomBool {
	return 0
}
// llgo:link (*JSON).IsString C.cJSON_IsString
func (recv_ *JSON) IsString() CustomBool {
	return 0
}
// llgo:link (*JSON).IsArray C.cJSON_IsArray
func (recv_ *JSON) IsArray() CustomBool {
	return 0
}
// llgo:link (*JSON).IsObject C.cJSON_IsObject
func (recv_ *JSON) IsObject() CustomBool {
	return 0
}
// llgo:link (*JSON).IsRaw C.cJSON_IsRaw
func (recv_ *JSON) IsRaw() CustomBool {
	return 0
}
//go:linkname CreateNull C.cJSON_CreateNull
func CreateNull() *JSON
//go:linkname CreateTrue C.cJSON_CreateTrue
func CreateTrue() *JSON
//go:linkname CreateFalse C.cJSON_CreateFalse
func CreateFalse() *JSON
// llgo:link CustomBool.CreateBool C.cJSON_CreateBool
func (recv_ CustomBool) CreateBool() *JSON {
	return nil
}
//go:linkname CreateNumber C.cJSON_CreateNumber
func CreateNumber(num float64) *JSON
//go:linkname CreateString C.cJSON_CreateString
func CreateString(string *int8) *JSON
//go:linkname CreateRaw C.cJSON_CreateRaw
func CreateRaw(raw *int8) *JSON
//go:linkname CreateArray C.cJSON_CreateArray
func CreateArray() *JSON
//go:linkname CreateObject C.cJSON_CreateObject
func CreateObject() *JSON
//go:linkname CreateStringReference C.cJSON_CreateStringReference
func CreateStringReference(string *int8) *JSON
// llgo:link (*JSON).CreateObjectReference C.cJSON_CreateObjectReference
func (recv_ *JSON) CreateObjectReference() *JSON {
	return nil
}
// llgo:link (*JSON).CreateArrayReference C.cJSON_CreateArrayReference
func (recv_ *JSON) CreateArrayReference() *JSON {
	return nil
}
//go:linkname CreateIntArray C.cJSON_CreateIntArray
func CreateIntArray(numbers *c.Int, count c.Int) *JSON
//go:linkname CreateFloatArray C.cJSON_CreateFloatArray
func CreateFloatArray(numbers *float32, count c.Int) *JSON
//go:linkname CreateDoubleArray C.cJSON_CreateDoubleArray
func CreateDoubleArray(numbers *float64, count c.Int) *JSON
//go:linkname CreateStringArray C.cJSON_CreateStringArray
func CreateStringArray(strings **int8, count c.Int) *JSON
// llgo:link (*JSON).AddItemToArray C.cJSON_AddItemToArray
func (recv_ *JSON) AddItemToArray(item *JSON) CustomBool {
	return 0
}
// llgo:link (*JSON).AddItemToObject C.cJSON_AddItemToObject
func (recv_ *JSON) AddItemToObject(string *int8, item *JSON) CustomBool {
	return 0
}
// llgo:link (*JSON).AddItemToObjectCS C.cJSON_AddItemToObjectCS
func (recv_ *JSON) AddItemToObjectCS(string *int8, item *JSON) CustomBool {
	return 0
}
// llgo:link (*JSON).AddItemReferenceToArray C.cJSON_AddItemReferenceToArray
func (recv_ *JSON) AddItemReferenceToArray(item *JSON) CustomBool {
	return 0
}
// llgo:link (*JSON).AddItemReferenceToObject C.cJSON_AddItemReferenceToObject
func (recv_ *JSON) AddItemReferenceToObject(string *int8, item *JSON) CustomBool {
	return 0
}
// llgo:link (*JSON).DetachItemViaPointer C.cJSON_DetachItemViaPointer
func (recv_ *JSON) DetachItemViaPointer(item *JSON) *JSON {
	return nil
}
// llgo:link (*JSON).DetachItemFromArray C.cJSON_DetachItemFromArray
func (recv_ *JSON) DetachItemFromArray(which c.Int) *JSON {
	return nil
}
// llgo:link (*JSON).DeleteItemFromArray C.cJSON_DeleteItemFromArray
func (recv_ *JSON) DeleteItemFromArray(which c.Int) {
}
// llgo:link (*JSON).DetachItemFromObject C.cJSON_DetachItemFromObject
func (recv_ *JSON) DetachItemFromObject(string *int8) *JSON {
	return nil
}
// llgo:link (*JSON).DetachItemFromObjectCaseSensitive C.cJSON_DetachItemFromObjectCaseSensitive
func (recv_ *JSON) DetachItemFromObjectCaseSensitive(string *int8) *JSON {
	return nil
}
// llgo:link (*JSON).DeleteItemFromObject C.cJSON_DeleteItemFromObject
func (recv_ *JSON) DeleteItemFromObject(string *int8) {
}
// llgo:link (*JSON).DeleteItemFromObjectCaseSensitive C.cJSON_DeleteItemFromObjectCaseSensitive
func (recv_ *JSON) DeleteItemFromObjectCaseSensitive(string *int8) {
}
// llgo:link (*JSON).InsertItemInArray C.cJSON_InsertItemInArray
func (recv_ *JSON) InsertItemInArray(which c.Int, newitem *JSON) CustomBool {
	return 0
}
// llgo:link (*JSON).ReplaceItemViaPointer C.cJSON_ReplaceItemViaPointer
func (recv_ *JSON) ReplaceItemViaPointer(item *JSON, replacement *JSON) CustomBool {
	return 0
}
// llgo:link (*JSON).ReplaceItemInArray C.cJSON_ReplaceItemInArray
func (recv_ *JSON) ReplaceItemInArray(which c.Int, newitem *JSON) CustomBool {
	return 0
}
// llgo:link (*JSON).ReplaceItemInObject C.cJSON_ReplaceItemInObject
func (recv_ *JSON) ReplaceItemInObject(string *int8, newitem *JSON) CustomBool {
	return 0
}
// llgo:link (*JSON).ReplaceItemInObjectCaseSensitive C.cJSON_ReplaceItemInObjectCaseSensitive
func (recv_ *JSON) ReplaceItemInObjectCaseSensitive(string *int8, newitem *JSON) CustomBool {
	return 0
}
// llgo:link (*JSON).Duplicate C.cJSON_Duplicate
func (recv_ *JSON) Duplicate(recurse CustomBool) *JSON {
	return nil
}
// llgo:link (*JSON).Compare C.cJSON_Compare
func (recv_ *JSON) Compare(b *JSON, case_sensitive CustomBool) CustomBool {
	return 0
}
//go:linkname Minify C.cJSON_Minify
func Minify(json *int8)
// llgo:link (*JSON).AddNullToObject C.cJSON_AddNullToObject
func (recv_ *JSON) AddNullToObject(name *int8) *JSON {
	return nil
}
// llgo:link (*JSON).AddTrueToObject C.cJSON_AddTrueToObject
func (recv_ *JSON) AddTrueToObject(name *int8) *JSON {
	return nil
}
// llgo:link (*JSON).AddFalseToObject C.cJSON_AddFalseToObject
func (recv_ *JSON) AddFalseToObject(name *int8) *JSON {
	return nil
}
// llgo:link (*JSON).AddBoolToObject C.cJSON_AddBoolToObject
func (recv_ *JSON) AddBoolToObject(name *int8, boolean CustomBool) *JSON {
	return nil
}
// llgo:link (*JSON).AddNumberToObject C.cJSON_AddNumberToObject
func (recv_ *JSON) AddNumberToObject(name *int8, number float64) *JSON {
	return nil
}
// llgo:link (*JSON).AddStringToObject C.cJSON_AddStringToObject
func (recv_ *JSON) AddStringToObject(name *int8, string *int8) *JSON {
	return nil
}
// llgo:link (*JSON).AddRawToObject C.cJSON_AddRawToObject
func (recv_ *JSON) AddRawToObject(name *int8, raw *int8) *JSON {
	return nil
}
// llgo:link (*JSON).AddObjectToObject C.cJSON_AddObjectToObject
func (recv_ *JSON) AddObjectToObject(name *int8) *JSON {
	return nil
}
// llgo:link (*JSON).AddArrayToObject C.cJSON_AddArrayToObject
func (recv_ *JSON) AddArrayToObject(name *int8) *JSON {
	return nil
}
// llgo:link (*JSON).SetNumberHelper C.cJSON_SetNumberHelper
func (recv_ *JSON) SetNumberHelper(number float64) float64 {
	return 0
}
// llgo:link (*JSON).SetValuestring C.cJSON_SetValuestring
func (recv_ *JSON) SetValuestring(valuestring *int8) *int8 {
	return nil
}
//go:linkname Malloc C.cJSON_malloc
func Malloc(size uintptr) unsafe.Pointer
//go:linkname Free C.cJSON_free
func Free(object unsafe.Pointer)

===== cJSON_Utils.go =====
package cjson

import (
	"github.com/goplus/llgo/c"
	_ "unsafe"
)
// llgo:link (*JSON).GetPointer C.cJSONUtils_GetPointer
func (recv_ *JSON) GetPointer(pointer *int8) *JSON {
	return nil
}
// llgo:link (*JSON).GetPointerCaseSensitive C.cJSONUtils_GetPointerCaseSensitive
func (recv_ *JSON) GetPointerCaseSensitive(pointer *int8) *JSON {
	return nil
}
// llgo:link (*JSON).GeneratePatches C.cJSONUtils_GeneratePatches
func (recv_ *JSON) GeneratePatches(to *JSON) *JSON {
	return nil
}
// llgo:link (*JSON).GeneratePatchesCaseSensitive C.cJSONUtils_GeneratePatchesCaseSensitive
func (recv_ *JSON) GeneratePatchesCaseSensitive(to *JSON) *JSON {
	return nil
}
// llgo:link (*JSON).AddPatchToArray C.cJSONUtils_AddPatchToArray
func (recv_ *JSON) AddPatchToArray(operation *int8, path *int8, value *JSON) {
}
// llgo:link (*JSON).ApplyPatches C.cJSONUtils_ApplyPatches
func (recv_ *JSON) ApplyPatches(patches *JSON) c.Int {
	return 0
}
// llgo:link (*JSON).ApplyPatchesCaseSensitive C.cJSONUtils_ApplyPatchesCaseSensitive
func (recv_ *JSON) ApplyPatchesCaseSensitive(patches *JSON) c.Int {
	return 0
}
// llgo:link (*JSON).MergePatch C.cJSONUtils_MergePatch
func (recv_ *JSON) MergePatch(patch *JSON) *JSON {
	return nil
}
// llgo:link (*JSON).MergePatchCaseSensitive C.cJSONUtils_MergePatchCaseSensitive
func (recv_ *JSON) MergePatchCaseSensitive(patch *JSON) *JSON {
	return nil
}
// llgo:link (*JSON).GenerateMergePatch C.cJSONUtils_GenerateMergePatch
func (recv_ *JSON) GenerateMergePatch(to *JSON) *JSON {
	return nil
}
// llgo:link (*JSON).GenerateMergePatchCaseSensitive C.cJSONUtils_GenerateMergePatchCaseSensitive
func (recv_ *JSON) GenerateMergePatchCaseSensitive(to *JSON) *JSON {
	return nil
}
// llgo:link (*JSON).FindPointerFromObjectTo C.cJSONUtils_FindPointerFromObjectTo
func (recv_ *JSON) FindPointerFromObjectTo(target *JSON) *int8 {
	return nil
}
// llgo:link (*JSON).SortObject C.cJSONUtils_SortObject
func (recv_ *JSON) SortObject() {
}
// llgo:link (*JSON).SortObjectCaseSensitive C.cJSONUtils_SortObjectCaseSensitive
func (recv_ *JSON) SortObjectCaseSensitive() {
}

===== llcppg.pub =====
cJSON JSON
cJSON_Hooks Hooks
cJSON_bool CustomBool