===== depcjson_autogen.go =====
package depcjson

import (
	"github.com/goplus/lib/c"
	_ "unsafe"
)

type X_depcjsonType c.Int

===== depcjson_autogen_link.go =====
package depcjson

import (
	_ "github.com/goplus/lib/c"
	_ "github.com/goplus/llcppg/cl/internal/convert/testdata/cjson"
	_ "github.com/goplus/llcppg/cl/internal/convert/testdata/thirddep"
	_ "github.com/goplus/llcppg/cl/internal/convert/testdata/thirddep2"
	_ "github.com/goplus/llcppg/cl/internal/convert/testdata/thirddep3"
)

const LLGoPackage string = "link: $(pkg-config --libs libcjson);"

===== temp.go =====
package depcjson

import (
	"github.com/goplus/lib/c"
	"github.com/goplus/llcppg/cl/internal/convert/testdata/basicdep"
	"github.com/goplus/llcppg/cl/internal/convert/testdata/cjson"
	"github.com/goplus/llcppg/cl/internal/convert/testdata/thirddep"
	"github.com/goplus/llcppg/cl/internal/convert/testdata/thirddep2"
	"github.com/goplus/llcppg/cl/internal/convert/testdata/thirddep3"
	_ "unsafe"
)

// This file is supposed to depend on cjson in its cflags, but for testing,
// we will simulate its API using libcjson instead.
//
//	"cflags" :"$(pkg-config --cflags libcjson)"
//
//go:linkname CreateResponse C.create_response
func CreateResponse(status_code c.Int, message *c.Char) *cjson.CJSON

//go:linkname ParseClientRequest C.parse_client_request
func ParseClientRequest(json_string *c.Char, error_buffer *c.Char, buffer_size c.SizeT) cjson.CJSONBool

//go:linkname SerializeResponse C.serialize_response
func SerializeResponse(response *cjson.CJSON, buffer *c.Char, length c.Int, pretty_print cjson.CJSONBool) cjson.CJSONBool

//go:linkname ThirdDepfn C.third_depfn
func ThirdDepfn(a *thirddep.ThirdDep, b *thirddep2.ThirdDep2, c X_depcjsonType, d basicdep.BasicDep) thirddep.ThirdDep

//go:linkname ThirdType C.third_type
func ThirdType(a *thirddep3.ThirdDep3) thirddep3.ThirdDep3

// This struct demonstrates the handling of same llcppg.pub names across different packages:
//
// 1. Basic_stream (from basicdep.h)
//   - Indirect dependency
//   - llcppg.pub mapping: Basic_stream -> Stream
//
// 2. third_dep_stream (from thirddep.h)
//   - Direct dependency
//   - llcppg.pub mapping: third_dep_stream -> Stream
type SamePubStream struct {
	BasicStream    basicdep.Stream
	ThirdDepStream thirddep.Stream
}

===== llcppg.pub =====
samePubStream SamePubStream